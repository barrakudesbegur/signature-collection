---
export const prerender = false;

import { db, desc, Signator } from "astro:db";
import Layout from "../layouts/Layout.astro";
import { cn } from "../utils/cn";
import { eq } from "astro:db";
import { formatDistanceToNow } from "date-fns";
import { ca } from "date-fns/locale";

// Get page from the query string
const page = Number(Astro.url.searchParams.get("page") || 1);
const pageSize = 20;
const offset = (page - 1) * pageSize;

// Get public signatories from database
const publicSignatories = await db
  .select({
    id: Signator.id,
    name: Signator.name,
    surname: Signator.surname,
    municipality: Signator.municipality,
    comment: Signator.comment,
    createdAt: Signator.createdAt,
  })
  .from(Signator)
  .where(eq(Signator.public, true))
  .orderBy(desc(Signator.createdAt))
  .offset(offset)
  .limit(pageSize);

// Count total signatories (both public and private)
const allSignatories = await db.select().from(Signator);
const totalSignatories = allSignatories.length;

// Count public signatories for pagination
const allPublicSignatories = await db
  .select()
  .from(Signator)
  .where(eq(Signator.public, true));
const totalPublicSignatories = allPublicSignatories.length;

// Calculate private signatories count
const privateSignatoriesCount = totalSignatories - totalPublicSignatories;

// Calculate pagination data
const totalPages = Math.ceil(totalPublicSignatories / pageSize);
const showPagination = totalPages > 1;

// Generate pagination range with logic for displaying a limited number of pages
function getPaginationRange(currentPage: number, totalPages: number) {
  // Always show 5 page numbers at most (excluding first/last when they're part of the 5)
  const delta = 2; // Pages to show on each side of current page
  const range: (number | string)[] = [];

  // Handle basic cases
  if (totalPages <= 7) {
    return Array.from({ length: totalPages }, (_, i) => i + 1);
  }

  // Always add first page
  range.push(1);

  // Calculate the start and end of the pagination range
  const rangeStart = Math.max(2, currentPage - delta);
  const rangeEnd = Math.min(totalPages - 1, currentPage + delta);

  // Add ellipsis if needed after first page
  if (rangeStart > 2) {
    range.push("...");
  }

  // Add the page range around current page
  for (let i = rangeStart; i <= rangeEnd; i++) {
    range.push(i);
  }

  // Add ellipsis if needed before last page
  if (rangeEnd < totalPages - 1) {
    range.push("...");
  }

  // Always add last page if it's not already in the range
  if (totalPages > 1) {
    range.push(totalPages);
  }

  return range;
}

const paginationRange = getPaginationRange(page, totalPages);
---

<Layout
  title="Signataris - Local polivalent a Begur"
  description="Persones que han signat la nostra petició per demanar a l'Ajuntament de Begur que construeixi un local polivalent per al nostre poble."
>
  <div class="max-w-xl mx-auto mt-16 md:mt-24 px-4 sm:px-0 mb-24">
    <h1 class="font-bold text-3xl sm:text-4xl mb-8">Signataris</h1>

    <p class="text-lg mb-8">
      Ja han signat <strong>{totalSignatories}</strong> persones,
      <a href="/sign" class="text-blue-600 hover:underline">signa tu també</a>!
    </p>

    {
      publicSignatories.length === 0 ? (
        <div class="bg-gray-50 border border-gray-200 rounded-md p-6 text-center">
          <p class="text-gray-600">
            Encara no hi ha signataris que hagin decidit fer públic el seu nom.
          </p>
        </div>
      ) : (
        <div class="space-y-6">
          <div class="bg-white border border-gray-200 rounded-md overflow-hidden">
            <ul class="divide-y divide-gray-200">
              {publicSignatories.map((signatory) => (
                <li class="p-4 hover:bg-gray-50">
                  <div class="flex justify-between">
                    <div>
                      <h3 class="font-medium inline">
                        {signatory.name} {signatory.surname}
                      </h3>
                      <span class="text-sm text-gray-600">
                        {/^h?[aeiou](?!els?\b)/i.test(signatory.municipality)
                          ? `d'${signatory.municipality}`
                          : `de ${signatory.municipality}`}
                      </span>
                    </div>
                    <div class="text-sm text-right text-gray-500">
                      <time
                        datetime={signatory.createdAt.toISOString()}
                        title={new Date(signatory.createdAt).toLocaleDateString(
                          "ca-ES"
                        )}
                      >
                        {formatDistanceToNow(signatory.createdAt, {
                          locale: ca,
                          addSuffix: true,
                        })}
                      </time>
                    </div>
                  </div>
                  {signatory.comment && (
                    <p class="mt-1 italic text-gray-700 whitespace-pre-line line-clamp-12">
                      {signatory.comment}
                    </p>
                  )}
                </li>
              ))}
            </ul>
          </div>

          {showPagination && (
            <div class="mt-8 flex justify-center">
              <nav aria-label="Paginació">
                <ul class="inline-flex -space-x-px text-sm">
                  {/* Previous page link */}
                  <li>
                    <a
                      href={page > 1 ? `/signatories?page=${page - 1}` : "#"}
                      class={cn(
                        "flex items-center justify-center px-3 h-8 ms-0 leading-tight border border-e-0 border-gray-300 rounded-s-lg",
                        page > 1
                          ? "text-gray-500 bg-white hover:bg-gray-100 hover:text-gray-700"
                          : "text-gray-300 bg-white pointer-events-none"
                      )}
                      aria-disabled={page <= 1}
                      tabindex={page <= 1 ? -1 : undefined}
                    >
                      <span class="sr-only">Pàgina anterior</span>
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-4 w-4"
                        viewBox="0 0 20 20"
                        fill="currentColor"
                        aria-hidden="true"
                      >
                        <path
                          fill-rule="evenodd"
                          d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z"
                          clip-rule="evenodd"
                        />
                      </svg>
                    </a>
                  </li>

                  {/* Page numbers */}
                  {paginationRange.map((pageNum, i) =>
                    pageNum === "..." ? (
                      <li>
                        <span class="flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border">
                          ...
                        </span>
                      </li>
                    ) : (
                      <li>
                        <a
                          href={`/signatories?page=${pageNum}`}
                          class={cn(
                            "flex items-center justify-center px-3 h-8 leading-tight border",
                            pageNum === page
                              ? "text-blue-600 border-gray-300 bg-blue-50 hover:bg-blue-100 hover:text-blue-700"
                              : "text-gray-500 bg-white border-gray-300 hover:bg-gray-100 hover:text-gray-700"
                          )}
                          aria-current={pageNum === page ? "page" : undefined}
                        >
                          {pageNum}
                        </a>
                      </li>
                    )
                  )}

                  {/* Next page link */}
                  <li>
                    <a
                      href={
                        page < totalPages
                          ? `/signatories?page=${page + 1}`
                          : "#"
                      }
                      class={cn(
                        "flex items-center justify-center px-3 h-8 leading-tight border border-gray-300 rounded-e-lg",
                        page < totalPages
                          ? "text-gray-500 bg-white hover:bg-gray-100 hover:text-gray-700"
                          : "text-gray-300 bg-white pointer-events-none"
                      )}
                      aria-disabled={page >= totalPages}
                      tabindex={page >= totalPages ? -1 : undefined}
                    >
                      <span class="sr-only">Pàgina següent</span>
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-4 w-4"
                        viewBox="0 0 20 20"
                        fill="currentColor"
                        aria-hidden="true"
                      >
                        <path
                          fill-rule="evenodd"
                          d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
                          clip-rule="evenodd"
                        />
                      </svg>
                    </a>
                  </li>
                </ul>
              </nav>
            </div>
          )}
        </div>
      )
    }

    <p class="text-sm text-gray-600 mt-6 text-center">
      +{privateSignatoriesCount.toLocaleString()} anònims
    </p>

    <div class="mt-16 flex justify-center">
      <a
        href="/"
        class="px-5 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50"
      >
        Tornar a la pàgina principal
      </a>
    </div>
  </div>
</Layout>
